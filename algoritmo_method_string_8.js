// Enunciado del algoritmo:

// Debes dise√±ar un algoritmo en JavaScript que reciba una cadena de texto y un √≠ndice. Utilizando el m√©todo codePointAt(), el algoritmo debe encontrar y retornar el valor del punto de c√≥digo Unicode en la cadena en la posici√≥n del √≠ndice proporcionado. Si el √≠ndice est√° fuera del rango de la cadena o si la cadena est√° vac√≠a, el algoritmo debe retornar un mensaje que diga: "√çndice fuera de rango" o "La cadena de texto est√° vac√≠a", respectivamente.

// Entrada propuesta:

// La entrada de datos ser√° la siguiente cadena de texto: "üôÇüôÉüòâ", y el √≠ndice ser√° 1.

// Salida esperada en consola:

// La salida que deber√≠a aparecer en la consola ser√≠a: 128579

// En este caso, el valor retornado corresponde al punto de c√≥digo Unicode del segundo car√°cter en la cadena de entrada, que es el emoji "üôÉ".

// Soluci√≥n:

let cadena = "üôÇüôÉüòâ";
const findCode =(a,b) =>{

    if(a.length === 0){
        return "La cadena de texto est√° vac√≠a";
    }else if(b > a.length){
        return "√çndice fuera de rango";
    }else{
        let code = a.codePointAt(b);
        return code;
    }
}

console.log(findCode(cadena,2));
